const path = require('path');
const express = require('express')
const app = express()
const cors = require('cors')
const { logger } = require('./middleware/logEvents')

const PORT = process.env.PORT || 3500;

// CUSTOM middleware logger
app.use(logger)

// THIRD PARTY MIDDLE WARE CORS = CROSS ORIGIN RESOURCE SHARING

const whiteList = ['https://www.google.com', 'http://127.0.0.1:5500', 'http://localhost:3500']
const corsOptions = {
    origin : (origin, callback) => {
        if(whiteList.indexOf(origin) !== -1){
            callback(null, true)
        } else {
            callback(new Error('Not allowed by CORS'))
        }
    },
    optionsSuccessStatus : 200
}
app.use(cors())

// built-in middleware to handle urlencoded data
// in other words, form-data:
// 'content-type: application/x-www-form-urlencoded'

app.use(express.urlencoded({ extended: false }));

// Built-in Middleware for JSON data
app.use(express.json())

// server static files
app.use(express.static(path.join(__dirname, '/public')))

// app.get('/', (req, res) => {
//     res.send('Hello World!')
// })

app.get('^/$|/index(.html)?', (req, res) => {
    res.sendFile(path.join(__dirname, 'views', 'index.html'))
})

app.get('/new-page(.html)?', (req, res) => {
    res.sendFile(path.join(__dirname, 'views', 'new-page.html'))
})

// HANDLE REDIRECT
app.get('/old-page(.html)?', (req, res) => {
    res.redirect(301, '/new-page.html') // 302 by default
})

// ROUTE HANDLERS (CAN add multple ROUTE HANDLERS)
app.get('/hello(.html)?', (req, res, next) => {
    console.log("ROUTE HANDLER EQUESTED!")
    next()
}, (req, res) => {
    res.send('Hello World!')
})

const one = (req, res, next) => {
    console.log("FIRST")
    next()
}

const two = (req, res, next) => {
    console.log("SECOND")
    next()
}

const three = (req, res) => {
    console.log("THIRD")
    res.send("FINISHED!")
}


// app.get('/chain(.html)?', one, two, three)
app.get('/chain(.html)?', [one, two, three])


// END

// DEFAULT 
app.get('/*', (req, res) => {
    res.status(404).sendFile(path.join(__dirname, 'views', '404.html'))
})

app.listen(PORT, () => console.log(`Server running on port ${PORT}`));